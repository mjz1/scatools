% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/hmmcopy_utils.R
\name{run_sc_hmmcopy}
\alias{run_sc_hmmcopy}
\title{Single Cell HMMcopy}
\usage{
run_sc_hmmcopy(
  chr,
  start,
  end,
  counts,
  reads,
  ideal = rep(TRUE, length(counts)),
  param = sc_hmm_params(),
  cell_id,
  multipliers = 1:6,
  verbose = FALSE,
  maxiter = 200,
  n_cutoff = NULL,
  return = c("best", "all")
)
}
\arguments{
\item{chr}{Vector of chromosomes}

\item{start}{Vector of bin start positions}

\item{end}{Vector of bin end positions}

\item{counts}{Vector of bin corrected counts. These should ideally be GC corrected counts from \code{\link[=gc_cor_modal]{gc_cor_modal()}}}

\item{reads}{A vector of raw read counts per bin}

\item{ideal}{A logical vector indicating which bins are ideal for analysis. See \code{\link[=is_ideal_bin]{is_ideal_bin()}}}

\item{param}{A matrix of parameter values in columns for each state in rows. See \code{\link[HMMcopy:HMMsegment]{HMMcopy::HMMsegment()}} for more information.}

\item{cell_id}{Cell id}

\item{multipliers}{Positive integer list of ploidy multipliers to test}

\item{verbose}{Print verbose}

\item{maxiter}{The maximum number of iterations allows for the Maximum-Expectation algorithm, reduce to decrease running time at the expense of robustness.}

\item{n_cutoff}{Cutoff for the number of bins in a given state for calculating the \code{true_multiplier} value. Defaults to 5\% of bins.}

\item{return}{a character. One of \code{best} or \code{all} to either return the result for the best ploidy only, or a list of results for all ploidies}
}
\value{
A list with the following objects:
\describe{
\item{bincounts}{Data frame of bin counts with copy state}
\item{modal_seg}{Data frame of genome segments}
\item{mstats}{A single row of cell summary statistics}
\item{df_params}{Data frame of parameters used for each iteration and state}
}
}
\description{
A conveniece wrapper function for \code{\link[=hmmcopy_singlecell]{hmmcopy_singlecell()}} to test multiple candidate \code{multiplier} (aka ploidy) values and return either the best result, or a list of all results for downstream analysis.
}
