% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/clustering.R
\name{add_umap_clusters}
\alias{add_umap_clusters}
\title{Add UMAP clusters to SCE}
\usage{
add_umap_clusters(
  sce,
  assay_name,
  n_neighbors = 10,
  min_dist = 0.1,
  minPts = 30,
  scale = c("none", "cells", "bins", "both"),
  name = "UMAP",
  clone_colname = "clone_id",
  log2 = FALSE,
  seed = 3,
  metric = "correlation",
  verbose = TRUE,
  force = TRUE
)
}
\arguments{
\item{sce}{SCE object}

\item{assay_name}{Name of assay to use for clustering}

\item{n_neighbors}{The size of local neighborhood (in terms of number of
neighboring sample points) used for manifold approximation. Larger values
result in more global views of the manifold, while smaller values result in
more local data being preserved. In general values should be in the range
\code{2} to \code{100}.}

\item{min_dist}{The effective minimum distance between embedded points.
Smaller values will result in a more clustered/clumped embedding where
nearby points on the manifold are drawn closer together, while larger
values will result on a more even dispersal of points. The value should be
set relative to the \code{spread} value, which determines the scale at
which embedded points will be spread out.}

\item{scale}{One of \verb{'cells', 'bins', 'both' or 'none'}. Determines what kind of scaling is done.}

\item{name}{String specifying the name to be used to store the result in the \link{reducedDims} of the output.}

\item{clone_colname}{Name of clone column in resulting sce object.}

\item{log2}{Logical: Log2 transform the matrix prior to plotting}

\item{seed}{Integer seed to use to initialize the random number generator
state. Combined with \code{n_sgd_threads = 1} or \code{batch = TRUE}, this
should give consistent output across multiple runs on a given installation.
Setting this value is equivalent to calling \code{\link[base]{set.seed}},
but it may be more convenient in some situations than having to call a
separate function. The default is to not set a seed. If
\code{ret_model = TRUE}, the seed will be stored in the output model and
then used to set the seed inside \code{\link[uwot]{umap_transform}}.}

\item{metric}{Type of distance metric to use to find nearest neighbors. For
 \code{nn_method = "annoy"} this can be one of:
\itemize{
  \item \code{"euclidean"} (the default)
  \item \code{"cosine"}
  \item \code{"manhattan"}
  \item \code{"hamming"}
  \item \code{"correlation"} (a distance based on the Pearson correlation)
  \item \code{"categorical"} (see below)
}
For \code{nn_method = "hnsw"} this can be one of:
\itemize{
  \item \code{"euclidean"}
  \item \code{"cosine"}
  \item \code{"correlation"}
}
If \href{https://cran.r-project.org/package=rnndescent}{rnndescent} is
installed and \code{nn_method = "nndescent"} is specified then many more
metrics are avaiable, including:
\itemize{
\item \code{"braycurtis"}
\item \code{"canberra"}
\item \code{"chebyshev"}
\item \code{"dice"}
\item \code{"hamming"}
\item \code{"hellinger"}
\item \code{"jaccard"}
\item \code{"jensenshannon"}
\item \code{"kulsinski"}
\item \code{"rogerstanimoto"}
\item \code{"russellrao"}
\item \code{"sokalmichener"}
\item \code{"sokalsneath"}
\item \code{"spearmanr"}
\item \code{"symmetrickl"}
\item \code{"tsss"}
\item \code{"yule"}
}
For more details see the package documentation of \code{rnndescent}.
For \code{nn_method = "fnn"}, the distance metric is always "euclidean".

If \code{X} is a data frame or matrix, then multiple metrics can be
specified, by passing a list to this argument, where the name of each item in
the list is one of the metric names above. The value of each list item should
be a vector giving the names or integer ids of the columns to be included in
a calculation, e.g. \code{metric = list(euclidean = 1:4, manhattan = 5:10)}.

Each metric calculation results in a separate fuzzy simplicial set, which are
intersected together to produce the final set. Metric names can be repeated.
Because non-numeric columns are removed from the data frame, it is safer to
use column names than integer ids.

Factor columns can also be used by specifying the metric name
\code{"categorical"}. Factor columns are treated different from numeric
columns and although multiple factor columns can be specified in a vector,
each factor column specified is processed individually. If you specify
a non-factor column, it will be coerced to a factor.

For a given data block, you may override the \code{pca} and \code{pca_center}
arguments for that block, by providing a list with one unnamed item
containing the column names or ids, and then any of the \code{pca} or
\code{pca_center} overrides as named items, e.g. \code{metric =
list(euclidean = 1:4, manhattan = list(5:10, pca_center = FALSE))}. This
exists to allow mixed binary and real-valued data to be included and to have
PCA applied to both, but with centering applied only to the real-valued data
(it is typical not to apply centering to binary data before PCA is applied).}

\item{verbose}{Logical: Message verbosity}

\item{force}{Logical. Overwrite identical column names in sce object}
}
\value{
An SCE object with the umap results and clones
}
\description{
Add UMAP clusters to SCE
}
